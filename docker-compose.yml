version: '3.8'

services:
  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: resume-parser-minio
    ports:
      - "9000:9000"  # MinIO API
      - "9001:9001"  # MinIO Console
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-admin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-password123}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - resume-parser-network

  # MinIO Client (mc) for bucket initialization
  minio-init:
    image: minio/mc:latest
    container_name: resume-parser-minio-init
    depends_on:
      - minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-admin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-password123}
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc config host add minio http://minio:9000 $$MINIO_ROOT_USER $$MINIO_ROOT_PASSWORD;
      /usr/bin/mc mb minio/input-resumes --ignore-existing;
      /usr/bin/mc mb minio/output-json --ignore-existing;
      /usr/bin/mc policy set public minio/input-resumes;
      /usr/bin/mc policy set public minio/output-json;
      echo 'MinIO buckets created successfully';
      "
    networks:
      - resume-parser-network

  # Resume Parser Application
  resume-parser:
    build: .
    container_name: resume-parser-app
    ports:
      - "8000:8000"
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER:-admin}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD:-password123}
      - MINIO_SECURE=false
      - INPUT_BUCKET=input-resumes
      - OUTPUT_BUCKET=output-json
    depends_on:
      - minio
      - minio-init
    volumes:
      - ./temp:/app/temp
      - ./logs:/app/logs
    networks:
      - resume-parser-network
    restart: unless-stopped

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: resume-parser-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - resume-parser
    networks:
      - resume-parser-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  minio_data:
    driver: local

networks:
  resume-parser-network:
    driver: bridge